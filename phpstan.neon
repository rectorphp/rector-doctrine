# to be enabled later
# includes:
#    - vendor/symplify/phpstan-rules/config/symplify-rules.neon

parameters:
    level: 8

    treatPhpDocTypesAsCertain: false

    paths:
        - config
        - src
        - tests
        - rules
        - rules-tests

    scanDirectories:
        - stubs

    excludePaths:
        - */Source/*
        - *Source/*
        - */Fixture/*

#    # see https://github.com/rectorphp/type-perfect/
#    type_perfect:
#        no_mixed: true
#        null_over_false: true
#        narrow_param: true
#        narrow_return: true

    ignoreErrors:
        # false positive
        - '#Parameter \#1 \$tag of method Rector\\BetterPhpDocParser\\PhpDocParser\\ClassAnnotationMatcher\:\:resolveTagFullyQualifiedName\(\) expects string, string\|null given#'

        -
            message: '#Parameter \#1 \$phpVersion of method Rector\\Config\\RectorConfig\:\:phpVersion\(\) expects (.*?), \d+ given#'
            paths:
                - tests/Set/*/config/configured_set.php

        # debug functions
#        -
#            message: '#Function "(d|function_exists)\(\)" cannot be used/left in the code#'
#            path:  tests/debug_functions.php

        # false positive
        -
            message: '#PHPDoc tag @return contains unresolvable type#'
            path: rules/CodeQuality/Contract/PropertyAttributeTransformerInterface.php

        # needed for instanceof method API
        - '#Doing instanceof PHPStan\\Type\\ObjectType is error\-prone and deprecated\. Use Type\:\:isObject\(\) or Type\:\:getObjectClassNames\(\) instead#'
        - '#Doing instanceof PHPStan\\Type\\(Generic\\GenericObjectType|ArrayType) is error\-prone and deprecated#'

        - '#::provideMinPhpVersion\(\) never returns \d+ so it can be removed from the return type#'
        - '#Method Rector\\Doctrine\\CodeQuality\\AttributeTransformer\\ClassAttributeTransformer\\.*ClassAttributeTransformer\:\:getClassName\(\) never returns#'

        -
            identifier: notIdentical.alwaysTrue
